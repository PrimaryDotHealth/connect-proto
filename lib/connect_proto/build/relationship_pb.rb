# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: relationship.proto

require 'google/protobuf'


descriptor_data = "\n\x12relationship.proto\x12\x0fprimary.connect*\xfd\x02\n\x0cRelationship\x12\x18\n\x14RELATIONSHIP_UNKNOWN\x10\x00\x12\x16\n\x12RELATIONSHIP_OTHER\x10\x01\x12\x15\n\x11RELATIONSHIP_SELF\x10\x02\x12\x17\n\x13RELATIONSHIP_SPOUSE\x10\x03\x12\x1d\n\x19RELATIONSHIP_LIFE_PARTNER\x10\x04\x12\x16\n\x12RELATIONSHIP_CHILD\x10\x05\x12\x17\n\x13RELATIONSHIP_FATHER\x10\x06\x12\x17\n\x13RELATIONSHIP_MOTHER\x10\x07\x12\x19\n\x15RELATIONSHIP_GUARDIAN\x10\x08\x12\x17\n\x13RELATIONSHIP_PARENT\x10\t\x12\x1c\n\x18RELATIONSHIP_GRANDPARENT\x10\n\x12\x1b\n\x17RELATIONSHIP_GRANDCHILD\x10\x0b\x12\x18\n\x14RELATIONSHIP_SIBLING\x10\x0c\x12\x19\n\x15RELATIONSHIP_EMPLOYER\x10\rB\x11Z\x0fprimary.connectb\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError => e
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Primary
  module Connect
    Relationship = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("primary.connect.Relationship").enummodule
  end
end
